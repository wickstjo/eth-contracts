{
  "contractName": "UserManager",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "users",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "user",
          "type": "address"
        }
      ],
      "name": "exists",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "user",
          "type": "address"
        }
      ],
      "name": "fetch",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "nickname",
          "type": "string"
        }
      ],
      "name": "add",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_task_manager",
          "type": "address"
        }
      ],
      "name": "init",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_task_manager\",\"type\":\"address\"}],\"name\":\"init\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"nickname\",\"type\":\"string\"}],\"name\":\"add\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"user\",\"type\":\"address\"}],\"name\":\"fetch\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"user\",\"type\":\"address\"}],\"name\":\"exists\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/Users/35840/Desktop/coding/node/eth-contracts/contracts/user/Manager.sol\":\"UserManager\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/35840/Desktop/coding/node/eth-contracts/contracts/user/Manager.sol\":{\"keccak256\":\"0x607f7f2f4e698730136c498ce9f3f93890ff887a5afd1e5516265f5eee780f7b\",\"urls\":[\"bzzr://888b93b7aac2cfa56de8494b5a4afd428bc6a83625a58f279593243d76a2a7cc\"]},\"/C/Users/35840/Desktop/coding/node/eth-contracts/contracts/user/User.sol\":{\"keccak256\":\"0xe39075cde75825113bd823d658d1ca629ddb68a6f4c82d64e8c056f45d6e2763\",\"urls\":[\"bzzr://b3a81750389ea09cfa77a4425bae33bf17d149b6747c25eeaeedf013645d1394\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "sourceMap": "86:1328:5:-;;;257:24;;;-1:-1:-1;;257:24:5;;;86:1328;5:2:-1;;;;30:1;27;20:12;5:2;86:1328:5;;;;;;;",
  "deployedSourceMap": "86:1328:5:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;86:1328:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1104:308;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1104:308:5;-1:-1:-1;;;;;1104:308:5;;:::i;:::-;;170:38;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;170:38:5;-1:-1:-1;;;;;170:38:5;;:::i;:::-;;;;-1:-1:-1;;;;;170:38:5;;;;;;;;;;;;;;824:247;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;824:247:5;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;824:247:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;824:247:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;824:247:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;824:247:5;;-1:-1:-1;824:247:5;;-1:-1:-1;;;;;824:247:5:i;589:201::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;589:201:5;-1:-1:-1;;;;;589:201:5;;:::i;342:223::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;342:223:5;-1:-1:-1;;;;;342:223:5;;:::i;:::-;;;;;;;;;;;;;;;;;;1104:308;1220:11;;;;1219:12;1211:62;;;;-1:-1:-1;;;;;1211:62:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1310:12;:28;;-1:-1:-1;;;;;;;1310:28:5;;;;;-1:-1:-1;;;;;;1310:28:5;;;;1387:18;;;;;;;;1104:308::o;170:38::-;;;;;;;;;;;;;-1:-1:-1;;;;;170:38:5;;:::o;824:247::-;926:18;933:10;926:6;:18::i;:::-;925:19;917:51;;;;;-1:-1:-1;;;;;917:51:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;1051:12;;1032:32;;1041:8;;1051:12;;;-1:-1:-1;;;;;1051:12:5;;1032:32;;;:::i;:::-;-1:-1:-1;;;;;1032:32:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1032:32:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;1018:10:5;1012:5;:17;;;;;;;;;;:52;;-1:-1:-1;;;;;;1012:52:5;-1:-1:-1;;;;;1012:52:5;;;;;;;;;;-1:-1:-1;824:247:5:o;589:201::-;638:4;693:12;700:4;693:6;:12::i;:::-;685:44;;;;;-1:-1:-1;;;;;685:44:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;772:11:5;;;:5;:11;;;;;;;;;;;;589:201;;;;:::o;342:223::-;-1:-1:-1;;;;;420:11:5;;;392:4;420:11;;;;;;;;;;;392:4;;420:11;412:66;408:151;;-1:-1:-1;501:4:5;494:11;;408:151;-1:-1:-1;543:5:5;536:12;;86:1328;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\n// IMPORT USER INTERFACE\nimport { User } from './User.sol';\n\ncontract UserManager {\n\n    // HASHMAP OF USER CONTRACTS -- [OWNER => LOCATION]\n    mapping (address => User) public users;\n\n    // INIT STATUS & TASK MANAGER ADDRESS\n    bool initialized = false;\n    address task_manager;\n\n    // CHECK IF USER EXISTS\n    function exists(address user) public view returns(bool) {\n        if (address(users[user]) != 0x0000000000000000000000000000000000000000) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    // FETCH USER\n    function fetch(address user) public view returns(User) {\n\n        // IF THE USER EXISTS\n        require(exists(user), 'user does not exist');\n\n        // FETCH DETAILS\n        return users[user];\n    }\n\n    // ADD ENTRY TO HASHMAP\n    function add(string memory nickname) public {\n\n        // IF THE USER DOES NOT EXIST\n        require(!exists(msg.sender), 'user already exists');\n\n        // PUSH ENTRY TO HASHMAP\n        users[msg.sender] = new User(nickname, task_manager);\n    }\n\n    // INITIALIZE CONTRACT\n    function init(address _task_manager) public {\n\n        // IF THE CONTRACT HAS NOT BEEN INITIALIZED\n        require(!initialized, 'contract has already been initialized');\n\n        // SET REFERENCES\n        task_manager = _task_manager;\n\n        // BLOCK FURTHER MODIFICATION\n        initialized = true;\n    }\n}",
  "sourcePath": "C:\\Users\\35840\\Desktop\\coding\\node\\eth-contracts\\contracts\\user\\Manager.sol",
  "ast": {
    "absolutePath": "/C/Users/35840/Desktop/coding/node/eth-contracts/contracts/user/Manager.sol",
    "exportedSymbols": {
      "UserManager": [
        937
      ]
    },
    "id": 938,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 838,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "absolutePath": "/C/Users/35840/Desktop/coding/node/eth-contracts/contracts/user/User.sol",
        "file": "./User.sol",
        "id": 840,
        "nodeType": "ImportDirective",
        "scope": 938,
        "sourceUnit": 1012,
        "src": "50:34:5",
        "symbolAliases": [
          {
            "foreign": 839,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [
          1011
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 937,
        "linearizedBaseContracts": [
          937
        ],
        "name": "UserManager",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 844,
            "name": "users",
            "nodeType": "VariableDeclaration",
            "scope": 937,
            "src": "170:38:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_User_$1011_$",
              "typeString": "mapping(address => contract User)"
            },
            "typeName": {
              "id": 843,
              "keyType": {
                "id": 841,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "179:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "170:25:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_User_$1011_$",
                "typeString": "mapping(address => contract User)"
              },
              "valueType": {
                "contractScope": null,
                "id": 842,
                "name": "User",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 1011,
                "src": "190:4:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_User_$1011",
                  "typeString": "contract User"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 847,
            "name": "initialized",
            "nodeType": "VariableDeclaration",
            "scope": 937,
            "src": "257:24:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 845,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "257:4:5",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "66616c7365",
              "id": 846,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "276:5:5",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 849,
            "name": "task_manager",
            "nodeType": "VariableDeclaration",
            "scope": 937,
            "src": "287:20:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 848,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "287:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 870,
              "nodeType": "Block",
              "src": "398:167:5",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 857,
                            "name": "users",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 844,
                            "src": "420:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_User_$1011_$",
                              "typeString": "mapping(address => contract User)"
                            }
                          },
                          "id": 859,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 858,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 851,
                            "src": "426:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "420:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_User_$1011",
                            "typeString": "contract User"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_User_$1011",
                            "typeString": "contract User"
                          }
                        ],
                        "id": 856,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "412:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 860,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "412:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030",
                      "id": 861,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "436:42:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "value": "0x0000000000000000000000000000000000000000"
                    },
                    "src": "412:66:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 868,
                    "nodeType": "Block",
                    "src": "522:37:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 866,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "543:5:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 855,
                        "id": 867,
                        "nodeType": "Return",
                        "src": "536:12:5"
                      }
                    ]
                  },
                  "id": 869,
                  "nodeType": "IfStatement",
                  "src": "408:151:5",
                  "trueBody": {
                    "id": 865,
                    "nodeType": "Block",
                    "src": "480:36:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 863,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "501:4:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 855,
                        "id": 864,
                        "nodeType": "Return",
                        "src": "494:11:5"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 871,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exists",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 851,
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 871,
                  "src": "358:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 850,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "358:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "357:14:5"
            },
            "returnParameters": {
              "id": 855,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 854,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 871,
                  "src": "392:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 853,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "392:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "391:6:5"
            },
            "scope": 937,
            "src": "342:223:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 889,
              "nodeType": "Block",
              "src": "644:146:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 880,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 873,
                            "src": "700:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 879,
                          "name": "exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 871,
                          "src": "693:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "693:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7573657220646f6573206e6f74206578697374",
                        "id": 882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "707:21:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_44a1c20ceeb2d3c42bdd712ac4353ffb65e737bf726621f6505798c5f70aba18",
                          "typeString": "literal_string \"user does not exist\""
                        },
                        "value": "user does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_44a1c20ceeb2d3c42bdd712ac4353ffb65e737bf726621f6505798c5f70aba18",
                          "typeString": "literal_string \"user does not exist\""
                        }
                      ],
                      "id": 878,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1029,
                        1030
                      ],
                      "referencedDeclaration": 1030,
                      "src": "685:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "685:44:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 884,
                  "nodeType": "ExpressionStatement",
                  "src": "685:44:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 885,
                      "name": "users",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 844,
                      "src": "772:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_contract$_User_$1011_$",
                        "typeString": "mapping(address => contract User)"
                      }
                    },
                    "id": 887,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 886,
                      "name": "user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 873,
                      "src": "778:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "772:11:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_User_$1011",
                      "typeString": "contract User"
                    }
                  },
                  "functionReturnParameters": 877,
                  "id": 888,
                  "nodeType": "Return",
                  "src": "765:18:5"
                }
              ]
            },
            "documentation": null,
            "id": 890,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fetch",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 874,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 873,
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 890,
                  "src": "604:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 872,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "604:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "603:14:5"
            },
            "returnParameters": {
              "id": 877,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 876,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 890,
                  "src": "638:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_User_$1011",
                    "typeString": "contract User"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 875,
                    "name": "User",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1011,
                    "src": "638:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_User_$1011",
                      "typeString": "contract User"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "637:6:5"
            },
            "scope": 937,
            "src": "589:201:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 915,
              "nodeType": "Block",
              "src": "868:203:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 900,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "925:19:5",
                        "subExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 897,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1026,
                                "src": "933:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 898,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "933:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 896,
                            "name": "exists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 871,
                            "src": "926:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 899,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "926:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7573657220616c726561647920657869737473",
                        "id": 901,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "946:21:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a4d7b7d222639f70280a8c87b627c135ce2533e7a3fe73a8c1e9102fb9a3078a",
                          "typeString": "literal_string \"user already exists\""
                        },
                        "value": "user already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a4d7b7d222639f70280a8c87b627c135ce2533e7a3fe73a8c1e9102fb9a3078a",
                          "typeString": "literal_string \"user already exists\""
                        }
                      ],
                      "id": 895,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1029,
                        1030
                      ],
                      "referencedDeclaration": 1030,
                      "src": "917:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "917:51:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 903,
                  "nodeType": "ExpressionStatement",
                  "src": "917:51:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 904,
                        "name": "users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 844,
                        "src": "1012:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_User_$1011_$",
                          "typeString": "mapping(address => contract User)"
                        }
                      },
                      "id": 907,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 905,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1026,
                          "src": "1018:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1018:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1012:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_User_$1011",
                        "typeString": "contract User"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 910,
                          "name": "nickname",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 892,
                          "src": "1041:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 911,
                          "name": "task_manager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 849,
                          "src": "1051:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1032:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_address_$returns$_t_contract$_User_$1011_$",
                          "typeString": "function (string memory,address) returns (contract User)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 908,
                          "name": "User",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1011,
                          "src": "1036:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_User_$1011",
                            "typeString": "contract User"
                          }
                        }
                      },
                      "id": 912,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1032:32:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_User_$1011",
                        "typeString": "contract User"
                      }
                    },
                    "src": "1012:52:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_User_$1011",
                      "typeString": "contract User"
                    }
                  },
                  "id": 914,
                  "nodeType": "ExpressionStatement",
                  "src": "1012:52:5"
                }
              ]
            },
            "documentation": null,
            "id": 916,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "add",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 893,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 892,
                  "name": "nickname",
                  "nodeType": "VariableDeclaration",
                  "scope": 916,
                  "src": "837:22:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 891,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "837:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "836:24:5"
            },
            "returnParameters": {
              "id": 894,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "868:0:5"
            },
            "scope": 937,
            "src": "824:247:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 935,
              "nodeType": "Block",
              "src": "1148:264:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1219:12:5",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 922,
                          "name": "initialized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 847,
                          "src": "1220:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "636f6e74726163742068617320616c7265616479206265656e20696e697469616c697a6564",
                        "id": 924,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1233:39:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0f22770b36f1e4f1e77883cafc4655cb428834387723e1d3c29900696fb160df",
                          "typeString": "literal_string \"contract has already been initialized\""
                        },
                        "value": "contract has already been initialized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0f22770b36f1e4f1e77883cafc4655cb428834387723e1d3c29900696fb160df",
                          "typeString": "literal_string \"contract has already been initialized\""
                        }
                      ],
                      "id": 921,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1029,
                        1030
                      ],
                      "referencedDeclaration": 1030,
                      "src": "1211:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1211:62:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 926,
                  "nodeType": "ExpressionStatement",
                  "src": "1211:62:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 927,
                      "name": "task_manager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 849,
                      "src": "1310:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 928,
                      "name": "_task_manager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 918,
                      "src": "1325:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1310:28:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 930,
                  "nodeType": "ExpressionStatement",
                  "src": "1310:28:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 931,
                      "name": "initialized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 847,
                      "src": "1387:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 932,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1401:4:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1387:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 934,
                  "nodeType": "ExpressionStatement",
                  "src": "1387:18:5"
                }
              ]
            },
            "documentation": null,
            "id": 936,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "init",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 919,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 918,
                  "name": "_task_manager",
                  "nodeType": "VariableDeclaration",
                  "scope": 936,
                  "src": "1118:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 917,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1118:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1117:23:5"
            },
            "returnParameters": {
              "id": 920,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1148:0:5"
            },
            "scope": 937,
            "src": "1104:308:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 938,
        "src": "86:1328:5"
      }
    ],
    "src": "0:1414:5"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/35840/Desktop/coding/node/eth-contracts/contracts/user/Manager.sol",
    "exportedSymbols": {
      "UserManager": [
        937
      ]
    },
    "id": 938,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 838,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "absolutePath": "/C/Users/35840/Desktop/coding/node/eth-contracts/contracts/user/User.sol",
        "file": "./User.sol",
        "id": 840,
        "nodeType": "ImportDirective",
        "scope": 938,
        "sourceUnit": 1012,
        "src": "50:34:5",
        "symbolAliases": [
          {
            "foreign": 839,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [
          1011
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 937,
        "linearizedBaseContracts": [
          937
        ],
        "name": "UserManager",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 844,
            "name": "users",
            "nodeType": "VariableDeclaration",
            "scope": 937,
            "src": "170:38:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_User_$1011_$",
              "typeString": "mapping(address => contract User)"
            },
            "typeName": {
              "id": 843,
              "keyType": {
                "id": 841,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "179:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "170:25:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_User_$1011_$",
                "typeString": "mapping(address => contract User)"
              },
              "valueType": {
                "contractScope": null,
                "id": 842,
                "name": "User",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 1011,
                "src": "190:4:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_User_$1011",
                  "typeString": "contract User"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 847,
            "name": "initialized",
            "nodeType": "VariableDeclaration",
            "scope": 937,
            "src": "257:24:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 845,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "257:4:5",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "66616c7365",
              "id": 846,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "276:5:5",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 849,
            "name": "task_manager",
            "nodeType": "VariableDeclaration",
            "scope": 937,
            "src": "287:20:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 848,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "287:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 870,
              "nodeType": "Block",
              "src": "398:167:5",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 857,
                            "name": "users",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 844,
                            "src": "420:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_User_$1011_$",
                              "typeString": "mapping(address => contract User)"
                            }
                          },
                          "id": 859,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 858,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 851,
                            "src": "426:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "420:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_User_$1011",
                            "typeString": "contract User"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_User_$1011",
                            "typeString": "contract User"
                          }
                        ],
                        "id": 856,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "412:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 860,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "412:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030",
                      "id": 861,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "436:42:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "value": "0x0000000000000000000000000000000000000000"
                    },
                    "src": "412:66:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 868,
                    "nodeType": "Block",
                    "src": "522:37:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 866,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "543:5:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 855,
                        "id": 867,
                        "nodeType": "Return",
                        "src": "536:12:5"
                      }
                    ]
                  },
                  "id": 869,
                  "nodeType": "IfStatement",
                  "src": "408:151:5",
                  "trueBody": {
                    "id": 865,
                    "nodeType": "Block",
                    "src": "480:36:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 863,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "501:4:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 855,
                        "id": 864,
                        "nodeType": "Return",
                        "src": "494:11:5"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 871,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exists",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 851,
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 871,
                  "src": "358:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 850,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "358:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "357:14:5"
            },
            "returnParameters": {
              "id": 855,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 854,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 871,
                  "src": "392:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 853,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "392:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "391:6:5"
            },
            "scope": 937,
            "src": "342:223:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 889,
              "nodeType": "Block",
              "src": "644:146:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 880,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 873,
                            "src": "700:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 879,
                          "name": "exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 871,
                          "src": "693:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "693:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7573657220646f6573206e6f74206578697374",
                        "id": 882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "707:21:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_44a1c20ceeb2d3c42bdd712ac4353ffb65e737bf726621f6505798c5f70aba18",
                          "typeString": "literal_string \"user does not exist\""
                        },
                        "value": "user does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_44a1c20ceeb2d3c42bdd712ac4353ffb65e737bf726621f6505798c5f70aba18",
                          "typeString": "literal_string \"user does not exist\""
                        }
                      ],
                      "id": 878,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1029,
                        1030
                      ],
                      "referencedDeclaration": 1030,
                      "src": "685:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "685:44:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 884,
                  "nodeType": "ExpressionStatement",
                  "src": "685:44:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 885,
                      "name": "users",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 844,
                      "src": "772:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_contract$_User_$1011_$",
                        "typeString": "mapping(address => contract User)"
                      }
                    },
                    "id": 887,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 886,
                      "name": "user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 873,
                      "src": "778:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "772:11:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_User_$1011",
                      "typeString": "contract User"
                    }
                  },
                  "functionReturnParameters": 877,
                  "id": 888,
                  "nodeType": "Return",
                  "src": "765:18:5"
                }
              ]
            },
            "documentation": null,
            "id": 890,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fetch",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 874,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 873,
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 890,
                  "src": "604:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 872,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "604:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "603:14:5"
            },
            "returnParameters": {
              "id": 877,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 876,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 890,
                  "src": "638:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_User_$1011",
                    "typeString": "contract User"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 875,
                    "name": "User",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1011,
                    "src": "638:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_User_$1011",
                      "typeString": "contract User"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "637:6:5"
            },
            "scope": 937,
            "src": "589:201:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 915,
              "nodeType": "Block",
              "src": "868:203:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 900,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "925:19:5",
                        "subExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 897,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1026,
                                "src": "933:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 898,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "933:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 896,
                            "name": "exists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 871,
                            "src": "926:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 899,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "926:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7573657220616c726561647920657869737473",
                        "id": 901,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "946:21:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a4d7b7d222639f70280a8c87b627c135ce2533e7a3fe73a8c1e9102fb9a3078a",
                          "typeString": "literal_string \"user already exists\""
                        },
                        "value": "user already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a4d7b7d222639f70280a8c87b627c135ce2533e7a3fe73a8c1e9102fb9a3078a",
                          "typeString": "literal_string \"user already exists\""
                        }
                      ],
                      "id": 895,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1029,
                        1030
                      ],
                      "referencedDeclaration": 1030,
                      "src": "917:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "917:51:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 903,
                  "nodeType": "ExpressionStatement",
                  "src": "917:51:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 904,
                        "name": "users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 844,
                        "src": "1012:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_User_$1011_$",
                          "typeString": "mapping(address => contract User)"
                        }
                      },
                      "id": 907,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 905,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1026,
                          "src": "1018:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1018:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1012:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_User_$1011",
                        "typeString": "contract User"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 910,
                          "name": "nickname",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 892,
                          "src": "1041:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 911,
                          "name": "task_manager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 849,
                          "src": "1051:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1032:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_address_$returns$_t_contract$_User_$1011_$",
                          "typeString": "function (string memory,address) returns (contract User)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 908,
                          "name": "User",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1011,
                          "src": "1036:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_User_$1011",
                            "typeString": "contract User"
                          }
                        }
                      },
                      "id": 912,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1032:32:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_User_$1011",
                        "typeString": "contract User"
                      }
                    },
                    "src": "1012:52:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_User_$1011",
                      "typeString": "contract User"
                    }
                  },
                  "id": 914,
                  "nodeType": "ExpressionStatement",
                  "src": "1012:52:5"
                }
              ]
            },
            "documentation": null,
            "id": 916,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "add",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 893,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 892,
                  "name": "nickname",
                  "nodeType": "VariableDeclaration",
                  "scope": 916,
                  "src": "837:22:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 891,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "837:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "836:24:5"
            },
            "returnParameters": {
              "id": 894,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "868:0:5"
            },
            "scope": 937,
            "src": "824:247:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 935,
              "nodeType": "Block",
              "src": "1148:264:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1219:12:5",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 922,
                          "name": "initialized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 847,
                          "src": "1220:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "636f6e74726163742068617320616c7265616479206265656e20696e697469616c697a6564",
                        "id": 924,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1233:39:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0f22770b36f1e4f1e77883cafc4655cb428834387723e1d3c29900696fb160df",
                          "typeString": "literal_string \"contract has already been initialized\""
                        },
                        "value": "contract has already been initialized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0f22770b36f1e4f1e77883cafc4655cb428834387723e1d3c29900696fb160df",
                          "typeString": "literal_string \"contract has already been initialized\""
                        }
                      ],
                      "id": 921,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1029,
                        1030
                      ],
                      "referencedDeclaration": 1030,
                      "src": "1211:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1211:62:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 926,
                  "nodeType": "ExpressionStatement",
                  "src": "1211:62:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 927,
                      "name": "task_manager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 849,
                      "src": "1310:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 928,
                      "name": "_task_manager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 918,
                      "src": "1325:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1310:28:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 930,
                  "nodeType": "ExpressionStatement",
                  "src": "1310:28:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 931,
                      "name": "initialized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 847,
                      "src": "1387:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 932,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1401:4:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1387:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 934,
                  "nodeType": "ExpressionStatement",
                  "src": "1387:18:5"
                }
              ]
            },
            "documentation": null,
            "id": 936,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "init",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 919,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 918,
                  "name": "_task_manager",
                  "nodeType": "VariableDeclaration",
                  "scope": 936,
                  "src": "1118:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 917,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1118:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1117:23:5"
            },
            "returnParameters": {
              "id": 920,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1148:0:5"
            },
            "scope": 937,
            "src": "1104:308:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 938,
        "src": "86:1328:5"
      }
    ],
    "src": "0:1414:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.17",
  "updatedAt": "2019-11-05T19:30:16.240Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}